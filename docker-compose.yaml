version: "3.9"

networks:
  kong-net:
    driver: bridge
  service-net:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:

services:
  proxy:
    image: nginx:alpine
    container_name: c-config-domain
    ports:
      - "80:80"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
  kong-database:
    image: postgres:9.6
    container_name: c-kong-database
    restart: always
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 1s
      retries: 5
    networks:
      - kong-net
  kong-migration:
    image: kong:2.4
    command: kong migrations bootstrap
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      - KONG_PASSWORD=kong
      # - KONG_PLUGINS=bundled,custom-auth
    links:
      - kong-database
    depends_on:
      - kong-database
    networks:
      - kong-net
  api-gateway:
    image: kong:2.4
    container_name: c-kong-ee
    restart: always
    links:
      - kong-database
    depends_on:
      kong-migration:
        condition: service_started
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      # - KONG_LOG_LEVEL=notice
      # - KONG_PROXY_ACCESS_LOG=/dev/stdout
      # - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      # - KONG_PROXY_ERROR_LOG=/dev/stderr
      # - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_GUI_LISTEN=0.0.0.0:8002, 0.0.0.0:8445 ssl
      - KONG_ADMIN_GUI_URL=http://localhost:8002
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_PLUGINS=bundled,custom-auth
    ports:
      - "8000-8004:8000-8004"
      - "8443-8445:8443-8445"
    volumes:
      # - ./custom-plugin:/usr/local/share/lua/5.1/kong/plugins/custom-plugin
      - ./custom-auth:/usr/local/share/lua/5.1/kong/plugins/custom-auth
    networks:
      - kong-net
      - service-net
  konga-prepare:
    image: pantsel/konga
    container_name: konga-prepare
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database:kong-database
    depends_on:
      - kong-database
  konga:
    image: pantsel/konga
    container_name: konga
    restart: on-failure
    links:
      - kong-database:kong-database
    depends_on:
      - kong-database
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga
      NODE_ENV: production
    ports:
      - "1337:1337"
  db-mongodb:
    image: mongo:latest
    container_name: c-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - service-net
  service-auth:
    image: trongnv138/k8s_facebook:service-auth-0.0.1
    container_name: service-auth
    depends_on:
      - db-mongodb
    # ports:
    #   - 8031:8031
    environment:
      - PORT=8031
      - ROUTING=api/v1/auth
      - BACKEND_ENDPOINT=http://api-gateway:8000/api/v1
      - MONGO_URI=mongodb://admin:root@db-mongodb:27017/auth?authSource=admin
    networks:
      - service-net
  service-facebook-auth:
    image: trongnv138/k8s_facebook:service-facebook-auth-0.0.2
    container_name: service-facebook-auth
    depends_on:
      - db-mongodb
    # ports:
    #   - 8032:8032
    environment:
      - PORT=8032
      - ROUTING=api/v1/facebook
      - BACKEND_ENDPOINT=http://api-gateway:8000/api/v1
      - MONGO_URI=mongodb://admin:root@db-mongodb:27017/facebook_auth?authSource=admin
    networks:
      - service-net
